<!-- =====================================start _intro_theory_ru.shtml======================================= -->
<div style="margin: 10px;">
<div id="content" class="narrowcolumn">
<b><i>should be translated into Russian</i></b>

<p align=justify><b>Impact is written in Java</b></p>

<p>Impact is written in Java for two reasons:</p>
<ol>
	<li><p align=justify>Java is an Object Oriented language and that suits Finite Element 
	Programming perfectly</p></li>
	<li><p>Java is clean, simple and extremely portable.</p></li>
</ol>

<p align=justify>On the other hand, Java might seem like a strange choice since this is a high 
	performance number crunching type of software and Java is not known to be competitive to ex. 
	Fortran or C++ in this area. 
	True, it is slower but with the new interpreters from IBM and Sun, 
	the built in runtime compiling actually gets the speed up quite a bit 
	so this is not such an issue after all. 
</p>

<p align=justify>The explicit code is based on the simple formula of F=M*A where F represents 
	a force, M is the mass of a body and A is the resulting acceleration of that body.
</p>

<p align=justify>All the code does is to calculate the acceleration for the body, 
	use a small step in time to translate this acceleration into a little displacement 
	of the body. This displacement is then used to calculate a responding force since 
	the body is elastic and can be stretched (thus creating a reaction force). 
	This force is then used to calculate an acceleration and then the process is repeated 
	again from the beginning.
</p>

<p align=justify>As long as the timestep is sufficiently small, the results are accurate.</p>
<br>

<p align=justify><b>Literature of Interest </b></p>
<p align=justify>There are a large number of books available on Finite Element Theory.  
	Most of them describe Finite Element from a static point of view and is therefore of
	limited interest to the potential Impact programmer. 
</p>

<p align=justify>On the other hand, the theory of element formulation is often usable to a
large extent and having that in mind, here are a few proposals:</p>

<ul>
  <li><p align=justify>Concepts And Applications Of Finite Element Analysis, Third edition -
		Robert D. Cook, David S. Malkus, Michael E. Plesha, ISBN 0-471-84788-7</p></li>
	<li><p align=justify>The Finite Element Method - Linear Static and Dynamic Finite Element
		Analysis - Thomas J. R. Hughes, ISBN 0-484-41181-8</p></li>
	<li><p align=justify>Nonlinear Finite Elements for Continua and Structures - Ted Belytschko,
		Wing Kam Liu, Brian Moran. ISBN 0-471-98773-5</p></li>
</ul>

<p align=justify> The first book is recommended to beginners and engineers in general
	since it deals with most issues from a linear algebra perspective. This
	makes the code writing quite close to the Impact format. It is also a very
	good book and the one I have had best feedback from.
</p>

<p align=justify>Ted Belytschko's book is the "bible" in this field. The man behind
	explicit codes have finally written a compendium on the theory and some
	principle algorithms are also shown. However, for an engineers perspective,
	this book is quite deep in its places and is more suitable as a reference
	than as a learning book for beginners.
</p>

<p align=justify>There are also some papers written which are of interest.
	These papers form the basis of coming shell element extension to Impact.
</p>

<ul>
  <li><p align=justify><a href="http://www.sciencedirect.com/science/article/pii/0045782584900264" target="_blank" title="Explicit Algorithms For The Nonlinear Dynamics Of Shells">Explicit Algorithms For The Nonlinear Dynamics Of Shells - Ted
			Belytchko</a>, Jerry I. Lin, Chen-Shyh Tsay, Computer methods in applied
			mechanics and engineering 42 (1984), page 225-251
		</p>
	</li>
  <li><p align=justify><a href="http://onlinelibrary.wiley.com/doi/10.1002/nme.1620180711/abstract" target="_blank" title="An explicit formulation for an efficient triangular plate-bending element">An Explicit Formulation For An Efficient Triangular Plate-Bending
			Element</a> - Jean-Louis Batoz, International journal for numerical methods in
			engineering, Vol. 18, page 1077-1089 (1982) 
		</p>
	</li>
</ul>

<p align=justify>To understand the concept behind object orientation, inheritance etc, the
	following book is a pleasure to read:
</p>

<ul>
  <li><p align=justify><a href="http://mindview.net/Books/TIJ4" target="_blank" title="Thinking in Java">Thinking in Java</a> - Burce Eckel. The old edition of this book is free to <a href="http://www.mindviewinc.com/Books/downloads.html" target="_blank" title="Free Download: Thinking in Java">download</a>. 
		</p>
	</li> 
</ul>

</div>
</div>

<div align="center" id="sidebar">
<p></p>
<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
	<center><a href="http://as.wiley.com/WileyCDA/WileyTitle/productCd-0471356050.html" target="blank"><img src="images/cook.jpg" width="120"  title="Concepts And Applications Of Finite Element Analysis"/></a></center>
	<br>
	<center><a href="http://books.google.com.my/books/about/The_finite_element_method.html?id=yarmSc7ULRsC&redir_esc=y" target="_blank" ><img src="images/hughes.jpeg" width="120" title="The Finite Element Method - Linear Static and Dynamic Finite Element Analysis" /></a></center>
	<br>
	<center><a href="http://as.wiley.com/WileyCDA/WileyTitle/productCd-0471987743.html" target="_blank" ><img src="images/ted.jpg" width="120" title="Nonlinear Finite Elements for Continua and Structures" /></a></center>
  
</div>

<!-- =====================================end _intro_theory_ru.shtml======================================= -->
